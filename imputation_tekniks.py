# -*- coding: utf-8 -*-
"""Imputation Tekniks.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/16vHwzUiZAachQeUW_Syq_m5UElbXJN-y
"""

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
from pandas import read_csv
from numpy import nan
from numpy import isnan
from sklearn.impute import KNNImputer

"""## Explore you dataset

"""

# load the dataset
dataset = read_csv('pima-indians-diabetes.csv', header=None)
dataset_org = read_csv('pima-indians-diabetes.csv', header=None)
# summarize the dataset
print(dataset.describe())

# print the first 20 rows of data
print(dataset.head(20))
# print(dataset_org.head(20))

# example of summarizing the number of missing values for each variable

# count the number of missing values for columns, in which we cannot have 0 values
num_missing = (dataset[[1,2,3,4,5]] == 0).sum()
# report the results
print(num_missing)

# example of marking missing values with nan values

# replace '0' values with 'nan'
dataset[[1,2,3,4,5]] = dataset[[1,2,3,4,5]].replace(0, nan)
# count the number of nan values in each column
print(dataset.isnull().sum())

print(dataset.head(20))

"""## The dropna() function
Removes the whole row with missing values
"""

# drop rows with missing values
dataset.dropna(inplace=True)
# summarize the shape of the data with missing rows removed
print(dataset.shape)

print('\n\n\nA distructive cut!')

"""## Peace: Let's Impute the missing values üïä ü§ù
by Mean
"""

dataset = read_csv('pima-indians-diabetes.csv', header=None)
# replace '0' values with 'nan'
dataset[[1,2,3,4,5]] = dataset[[1,2,3,4,5]].replace(0, nan)
# fill missing values with mean column values
dataset.fillna(dataset.mean(), inplace=True)

print(dataset.head(20))
# print(dataset_org.head(20))

"""By Median"""

dataset = read_csv('pima-indians-diabetes.csv', header=None)
# replace '0' values with 'nan'
dataset[[1,2,3,4,5]] = dataset[[1,2,3,4,5]].replace(0, nan)

# fill missing values with mean column values
dataset.fillna(dataset.median(), inplace=True)

print(dataset.head(20))

"""## KNNImputer"""

dataset = read_csv('pima-indians-diabetes.csv', header=None)
# replace '0' values with 'nan'
dataset[[1,2,3,4,5]] = dataset[[1,2,3,4,5]].replace(0, nan)

imputer = KNNImputer(n_neighbors=4)
# transform the dataset
transformed_values = imputer.fit_transform(dataset.values)

transformed_values[0:20, 1:6]



"""## Multivariate imputation
iterativeimputer()
"""

from sklearn.experimental import enable_iterative_imputer
from sklearn.impute import IterativeImputer

dataset = read_csv('pima-indians-diabetes.csv', header=None)
# replace '0' values with 'nan'
dataset[[1,2,3,4,5]] = dataset[[1,2,3,4,5]].replace(0, nan)

values = dataset.values
# define the imputer
imputer = IterativeImputer(random_state=0)
# transform the dataset
transformed_values = imputer.fit_transform(values)

transformed_values[0:20, 1:6]



dataset.head()
dataset.info()

dataset.isnull()

dataset.isnull().sum()

"""Code inspired by: [Jason Brownlee PhD](https://machinelearningmastery.com/handle-missing-data-python/)"""